<h1>About</h1>
<p>何謂網際內容管理?</p>
<p style="padding-left: 30px;">在網際進行數位內容資料的管理</p>
<p style="padding-left: 60px;">何謂網際?</p>
<p style="padding-left: 90px;">Web-based</p>
<p style="padding-left: 120px;">何謂 Web?</p>
<p style="padding-left: 150px;">World-Wide-Web</p>
<p style="padding-left: 180px;">client-browser, server-WWW server</p>
<p style="padding-left: 60px;">何謂數位內容?</p>
<p style="padding-left: 90px;">能夠以數位格式儲存的內容</p>
<p style="padding-left: 120px;">text, equation, plot, images, audio, video, multi-media animation</p>
<p style="padding-left: 60px;">何謂管理?</p>
<p style="padding-left: 90px;">分門別類整理後便於保存, 查找, 分享數位內容</p>
<p style="padding-left: 90px;">管理的目的為何?</p>
<p style="padding-left: 120px;">紀錄解決問題的過程, 期再次碰到類似問題時可以儘量重用內容</p>
<p style="padding-left: 150px;">為何大多數內容重用只能是儘量重用?</p>
<p style="padding-left: 180px;">因為環境會變, 工具會變, 整體工作環境系統也會不斷改變</p>
<p>執行網際內容管理需不需要寫程式?</p>
<p style="padding-left: 30px;">不寫, 可以用其他人寫的工具與套件</p>
<p style="padding-left: 30px;">自己寫, 則可以依照自己或團隊的需求, 量身訂做自己需要的工具或管理系統</p>
<p>分組專題:</p>
<p style="padding-left: 30px;">W3 自選組員, 6 人一組.</p>
<p style="padding-left: 30px;">W10 之後的專題題目自選, 並在 <a href="https://github.com/mdecourse/wcmj2021/discussions">https://github.com/mdecourse/wcmj2021/discussions</a> 進行討論</p>
<p>評分:</p>
<p style="padding-left: 30px;">出席 10%</p>
<p style="padding-left: 30px;">個人倉儲與網頁 30%</p>
<p style="padding-left: 30px;">每週網際簡報 html 與 Pdf 報告 60% (含 Youtube 操作影片)</p>
<p>Repository template: <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<h4>電腦輔助設計室與協同設計室行事曆</h4>
<p><a href="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei">全頁檢視</a></p>
<p><iframe height="600" src="https://calendar.google.com/calendar/embed?src=mde.nfu.edu.tw_3439313938333136353439%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;mode=week&amp;src=mde.nfu.edu.tw_35303530373431313438%40resource.calendar.google.com&amp;ctz=Asia%2FTaipei&amp;src=yen%40gm.nfu.edu.tw&amp;ctz=Asia%2FTaipei" width="800"></iframe></p><h2>三道牆理論</h2>
<p>KMOLab 所開設課程目的是將擋在機械工程師面前的三道牆, 直接利用課程講授的過程, 一一呈現, 讓大家有及時找出突破這三道障礙的機會, 不僅讓各自的潛能有所發揮, 同時也希望大家能更自在地面對未來的更多挑戰.<br/><br/>這三道牆分別是:</p>
<p>理論基礎障礙<br/>實務練習障礙<br/>確立目標障礙</p>
<h4>理論基礎障礙</h4>
<p>所謂的理論基礎障礙就是技職體系學生在高中階段經常疏忽的英文, 數學與邏輯思考與獲取學問的基本能力. 也就是英文聽說讀寫的基本能力, 數學基本能力與了解如何透過邏輯思考解題, 並且學習如何發問, 如何與人協同合作解決問題的能力.</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2020/content/W10-W14.html">http://mde.tw/cad2020/content/W10-W14.html</a></p>
<h4>實務練習障礙</h4>
<p>第二道牆則是實務練習障礙, 許多人不願意花時間在突破上述第一道障礙的原因, 通常是因為不知道學習這些相對抽象的知識有甚麼用處? 因此, 為了凸顯突破第一道牆的重要性, 就必須要透過實際的課程案例, 讓大家了解一旦能突破第一道牆的障礙後, 養成持續學習這些理論基礎內容之後, 就可以相對用比較有效率的方式解決各種問題.</p>
<p>但是這需要學習者付出時間與耐性, 當面對完全陌生議題時, 就必須檢討是否第一道牆仍然卡在自己與解決方案中間. 然後用心不斷思考, 探索與練習之後, 若還是無法解決問題. 就必須要先試著描述問題後再尋求他人的協助.</p>
<p>假如能有以上的正確學習態度, 就有機會在面對各種問題時, 持續突破前面的兩道牆, 然後看到自己所追求的第三道牆, 並且此後能夠竭盡全力, 翻閱第三道牆的障礙, 積極達成預定目標.</p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2020/content/HW1.html">http://mde.tw/cad2020/content/HW1.html</a></p>
<p style="padding-left: 30px;"><a href="http://mde.tw/cad2020/content/HW2.html">http://mde.tw/cad2020/content/HW2.html</a></p>
<p style="padding-left: 60px;"><a href="http://mde.tw/cad2020/content/HW1_SW.html">http://mde.tw/cad2020/content/HW1_SW.html</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/KmolYuan/Pyslvs-UI">https://github.com/KmolYuan/Pyslvs-UI</a></p>
<h4>確立目標障礙</h4>
<p>你的人生目標是甚麼?</p>
<p style="padding-left: 30px;"><a href="https://www.ptt.cc/bbs/Tech_Job/M.1588362728.A.14F.html">https://www.ptt.cc/bbs/Tech_Job/M.1588362728.A.14F.html</a> </p><h2>Blogger</h2>
<h4>網誌:</h4>
<p style="padding-left: 30px;"><a href="https://www.blogger.com/">https://www.blogger.com/</a></p>
<p style="padding-left: 30px;"><a href="https://blog.getpelican.com/">https://blog.getpelican.com/</a></p>
<h4>論壇:</h4>
<p style="padding-left: 30px;"><a href="https://www.discourse.org/">https://www.discourse.org/</a></p>
<p style="padding-left: 60px;"><a href="https://jpme.eng.nfu.edu.tw">https://jpme.eng.nfu.edu.tw</a></p>
<p style="padding-left: 60px;"><a href="https://forum.eng.nfu.edu.tw">https://forum.eng.nfu.edu.tw</a></p>
<p>Blogger, Pelican 與 Discourse 內容能不能整合並同步?</p>
<p><a href="https://mdecourse.blogspot.com/2020/05/pelican-blogger_21.html">https://mdecourse.blogspot.com/2020/05/pelican-blogger_21.html</a></p>
<p><a href="https://meta.discourse.org/t/how-can-i-implement-a-blog-page-in-discourse-forum-software/48496/6">https://meta.discourse.org/t/how-can-i-implement-a-blog-page-in-discourse-forum-software/48496/6</a></p>
<p></p><h2>個人電腦</h2>
<p>機械工程師由於必須在個人電腦上繪製並顯示 3D 零組件, 因此個人電腦通常需要配備獨立顯示卡, 其基本規格與電競機類似:</p>
<p><a href="https://www.crucial.tw/articles/for-gamers/the-best-specs-for-a-gaming-pc">https://www.crucial.tw/articles/for-gamers/the-best-specs-for-a-gaming-pc</a></p>
<p>CPU (<a href="https://en.wikipedia.org/wiki/Central_processing_unit">Central Processing Unit</a>) - 中央處理器</p>
<p style="padding-left: 30px;">Intel Processor: <a href="https://en.wikipedia.org/wiki/List_of_Intel_processors">https://en.wikipedia.org/wiki/List_of_Intel_processors</a></p>
<p style="padding-left: 30px;">AMD Processor: <a href="https://en.wikipedia.org/wiki/List_of_AMD_processors">https://en.wikipedia.org/wiki/List_of_AMD_processors</a></p>
<p style="padding-left: 30px;">ARM Architecture: <a href="https://en.wikipedia.org/wiki/ARM_architecture">https://en.wikipedia.org/wiki/ARM_architecture</a></p>
<p style="padding-left: 30px;">Apple Designed Processor: <a href="https://en.wikipedia.org/wiki/Apple-designed_processors">https://en.wikipedia.org/wiki/Apple-designed_processors</a> 　</p>
<p>FULL HD (<a href="https://en.wikipedia.org/wiki/High-definition_video">High Definition</a>)</p>
<p><a href="https://en.wikipedia.org/wiki/Motherboard">Motherboard</a> 主機板</p>
<p>RAM (<a href="https://en.wikipedia.org/wiki/Random-access_memory">Random-Access Memory</a>)</p>
<p style="padding-left: 30px;">DDR (<a href="https://en.wikipedia.org/wiki/Double_data_rate">Double Data Rate</a>)</p>
<p>何謂 HDD/SSD? 有何差別?</p>
<p style="padding-left: 30px;">何謂 RPM?</p>
<p style="padding-left: 30px;">何謂 ATA、PATA、與 SATA 連接埠? 有何差別?</p>
<p>何謂 Video Card?</p>
<p style="padding-left: 30px;">何謂 fps?</p>
<p style="padding-left: 30px;">何謂 DVI?</p>
<p style="padding-left: 30px;">何謂 HDMI?</p>
<p style="padding-left: 30px;">何謂 <a href="https://en.wikipedia.org/wiki/Light-emitting_diode">LED</a>?</p>
<p>何謂 DirectX?</p>
<p>何謂 <a href="https://en.wikipedia.org/wiki/Watt">Watt</a>?</p>
<p style="padding-left: 30px;">何謂 <a href="https://en.wikipedia.org/wiki/Power_(physics)">Power</a>?</p>
<p>何謂 Hz (<a href="https://en.wikipedia.org/wiki/Hertz">Hertz</a>)?</p>
<p>Computer Monitor</p>
<p style="padding-left: 30px;">何謂 ppi?</p><h2>Network</h2>
<p><a href="https://searchnetworking.techtarget.com/tip/How-to-calculate-network-bandwidth-requirements">Understanding bandwidth</a><br/><br/>Bandwidth refers to the data rate that is supported by the network connection or the interfaces that connect to the network. It represents both volume and time, representing the amount of data that can be transmitted between two points in a set period of time. It is usually expressed in terms of bits per second (bps), or sometimes in bytes per second (Bps).<br/><br/>Network bandwidth represents the capacity of the network connection, though it's important to understand the distinction between theoretical throughput and real-world results when figuring out the right bandwidth formula for your network. For example, a 1000BASE-T -- which uses unshielded twisted-pair cables -- Gigabit Ethernet (GbE) network can theoretically support 1,000 megabits per second (Mbps), but this level can never really be achieved in practice because of hardware and systems software overhead.<br/><br/>One point to consider when thinking about how to calculate bandwidth needs on your network is this: Bandwidth should not be confused with throughput, which refers to speed. While high-bandwidth networks are often fast, that is not always the case. A helpful metaphor when thinking about bandwidth is cars on a highway. A high-bandwidth network is like a six-lane highway that can fit hundreds of cars at any given moment. A low-bandwidth network is like a single-lane road in which one car queues directly behind another.<br/><br/>Although the large highway is likely to move vehicles faster, rush-hour traffic can easily bring cars and trucks to a standstill. Or, perhaps, the cars cannot get onto the highway quickly because it's clogged with large delivery trucks that take up a lot of space on the road. Similarly, even a high-bandwidth network can run slowly in the face of problems, such as congestion and bandwidth-hungry applications.<br/><br/>These very points make calculating bandwidth requirements a challenge, yet the consequences of getting the bandwidth formula wrong are considerable. If you don't procure enough bandwidth, you all but guarantee the network will run slowly. However, significantly overprovisioning bandwidth can be cost-prohibitive for most enterprises.<br/><br/>So, how do you determine the right formula that will meet your bandwidth requirements? The process begins with asking the right questions: What applications are users running, and what is the performance service-level agreement for these applications? I know some network managers who are only concerned with how many users are on a virtual LAN. What you really need to know is what the users will be doing on the network. It's possible that 200 users will cause less of a bottleneck than a group of three users that really beats the heck out of the network because of some funky client-server application or extensive use of a bandwidth-heavy service, like high-definition video conferencing.</p>
<p><img alt="" height="318" src="/images/ethernet_speed_roadmap.jpg" width="600"/></p>
<p>了解 <a href="https://www.wireshark.org">https://www.wireshark.org</a> 的用法, 並藉以提升網路頻寬的使用效能及安全.</p>
<p style="padding-left: 30px;">近端下載</p>
<p><a href="http://a.kmol.info:88/Wireshark-win64-3.4.2.exe">http://a.kmol.info:88/Wireshark-win64-3.4.2.exe</a></p><h3>Switch</h3>
<p>Not all switches are created equal.</p>
<p><a href="https://community.cisco.com/t5/switching/switch-backplane-forwarding-rate-throughput-bandwidth/td-p/1432400">來源</a></p>
<p><a href="https://www.cisco.com/c/en/us/products/switches/index.html#~products">https://www.cisco.com/c/en/us/products/switches/index.html#~products</a></p>
<p><a href="https://www.cisco.com/c/dam/en/us/products/collateral/switches/catalyst-9300-series-switches/nb-06-upgrading-cat-9300-fc-cte-en.pdf">https://www.cisco.com/c/dam/en/us/products/collateral/switches/catalyst-9300-series-switches/nb-06-upgrading-cat-9300-fc-cte-en.pdf</a></p>
<p>internally to a switch a specialized hardware is needed to move frames between ports.<br/><br/>This specific part can be called backplane (背板) or in some cases we talk of switching fabric (交換結構).<br/><br/>When the forwarding capabilities of a backplane or switching fabric are greater then the sum of speeds of all ports (counted twice one for tx and one rx direction) we call the switching fabric non blocking: traffic between a pair of ports is not influenced by what traffic is exchanged on all other ports.<br/><br/>The forwarding rate is expressed in packet per seconds and expresses how many packets per second are needed to reach a certain traffic volume (throughpout)<br/><br/>Clearly forwarding rate depends on frame size.<br/><br/>Ideally a backplane switching fabric should be non blocking for every frame size including the smallest ones (64 bytes in ethernet standard) but in reality most devices can be non blocking for an average size of 400 bytes.<br/><br/>bandwidth: the speed of traffic.<br/><br/>to convert between forwarding rate and used bandwidth we need to take in account some specific aspects of ethernet:<br/><br/>each frame has an 8 byte preamble that is used to allow to potential receiver to synchronize with the signal<br/><br/>between two frames a minimum silence interval must exist to allow receiver to discriminate between two frames<br/><br/>preamble and inter frame gap counts for 20,2 bytes.<br/><br/>So given an iP packet of size N the ethernet frame has size N+18  (header 14 bytes, FCS 4 byte) but counts as (N+18+20,2)*8 on wire<br/><br/>8 is number of bits in a byte<br/><br/>with this kind of calculation using frames of minimum size 64 bytes you need 1488000 frames per second and per direction to fill a GE port.<br/><br/>Be also aware that all figures you see sum tx and rx directions so if a switch has 100 M pps capability this accounts for a certain number of GE ports at 1 Gbps full duplex.<br/><br/></p>
<p>Do not confuse the speed of the stackwise ring with the internal switching fabric of each stack member, they are different: the internal switching fabric should be used for traffic between ports on the same stack member device, the stackwise bandwidth should be used when traffic must flow between ports located on different stack members.<br/><br/>Note: this is just my assumption about the implementation of stack, it may be different with the dual ring involved also for traffic between two ports on the same member switch. (total lack of so called local switching capabilities).<br/><br/>The stack implements a dual ring topology between the member switches that act as an extension of the individual switching fabrics.<br/><br/>The speed of the ring for a stack of only 3750-X (stackwise plus) should be 32 Gbps full duplex that allows for a very good interconnection between member switches, but I agree it is not enough to classify the composite switching fabric as not blocking.<br/><br/>On the other hand, only models with 10GE ports can be interconnected at comparable speeds.<br/><br/>To make a comparison a C6500 equipped with Sup720 generation route processor provides up to 40 Gbps per slot to/from the switching fabric and some linecards are faster then that ( think of  WS-6708 or WS-6716 with 8 and 16 tengiga ports respectively).<br/><br/>About the forwarding capacity in pps:<br/><br/>for a 24 ports device is listed as 65.5 Mbps that accounts for 22 GE ports 1Gbps full duplex with 64 byte frames.</p>
<p>An original series 3750 (or 3560) fabric is 32 Gbps.  This is different from the stack ring's "32 Gbps" (which is really dual 8 Gbps, duplex).<br/><br/>An original series 3750 (or 3560) internal fabric, in theory, is oversubscribed by more than 16 gig ports (i.e. the "G" suffixed original models).<br/><br/>The terms non-blocking and blocking, when examining switch fabric isn't just sufficient bandwidth capacity to forward all port bandwidths, it's whether the fabric's architecture will block, or not, forwarding of frames even if there's "sufficient" bandwidth.<br/><br/>For example, you have three ingress ports.  Two are sending to one egress port (2:1) and the other is sending to other egress port (1:1).  If 2:1 congestion on the one egress port delays (or blocks) transmission on the 1:1 egress port, you have HOL (head-of-line) blocking even though the internal fabric's bandwidth could support each ingress port sending to a separate egress port (all 1:1).<br/><br/>StackWise (and StackWise+), when available, use both ring ports.<br/><br/>Original StackWise copies ALL member switch traffic to the stack ring.  Original StackWise source stack member also removes the traffic it placed on the stack ring.<br/><br/>StackWise Plus only places unicast traffic on the stack ring when destination is not a local switch port.  Additionally, destination switch member removes unicast packets.  (I.e. StackWise+ uses it's ring much more intelligently.  It also has dual 16 Gbps stack ring ports.  NB:StackWise+, for the most part, reverts to StackWise operation if there's a StackWise only member switch in the stack [good reason not to use such mixed stacks].)<br/><br/>Bits per second, is the transmission rate supported by the media.  So, for example, 100 Mbps allows transmission of 100,000,000 bits per seconds.  However, transferring actual data, in something like physical segments (e.g. frames) uses some of this capacity for both framing overhead and framing delineation, so useful capacity is less than the often quoted bps rate.  Useful capacity percentage (of overall rate) also generally decreases as frame size decreases.  (BTW, similar issue with disk media.  At least disk capacity isn't, generally, quoted for its unformatted capacity any longer.)<br/><br/>The 25 Mbps throughput is rated for minimum sized packets.  Larger packets often allow much higher throughput as the packets per second requirement (for same bandwidth) decreases.  (Sometimes the vendor will document PPS rates for multiple packet sizes.  Without such documentation, or your own testing, just knowing documented performance for one packet size you cannot accurately predict a device's performance for other packet sizes.)</p>
<p><a href="https://topic.alibabacloud.com/a/how-is-the-backplane-bandwidth-switching-capacity-and-packet-forwarding-rate-of-the-switch-calculated-why-each-manufacturers_8_8_31249771.html">來源</a></p>
<p>Switch backplane bandwidth, switching capacity, packet forwarding rate difference Backplane bandwidth refers to the entire switching capacity of the backplane, switching capacity refers to the switching capacity of the CPU, and packet forwarding refers to the capacity of the three-layer forwarding.<br/><br/>First, the backplane bandwidth<br/><br/>1. Switch backplane bandwidth meaning</p>
<p>The backplane bandwidth of the switch, also called the backplane capacity, is the maximum amount of data that can be handled between the switch interface processor or the interface card and the data bus. The backplane bandwidth marks the total data exchange capacity of the switch, in Gbps. The backplane bandwidth of a typical switch ranges from a few Gbps to hundreds of Gbps. The higher the backplane bandwidth of a switch, the better the ability to process data, but at the same time the design cost will be higher.<br/><br/>2. The internal structure of the switch</p>
<p>The utilization of backplane bandwidth resources is closely related to the internal structure of the switch. At present, the internal structure of the switch mainly has the following types:</p>
<p>First, a shared memory structure, which relies on a central switching engine to provide a high-performance connection for a full port, and the core engine checks each input packet to determine a route. This method requires a large memory bandwidth and high management cost. Especially with the increase of the switch port, the price of the central memory will be very high, so the switch core becomes the bottleneck of performance realization;</p>
<p>the second is the cross bus structure, which can Establish a direct point-to-point connection between ports, which is good for single-point transmission, but not suitable for multi-point transmission;</p>
<p>the third is a hybrid cross-bus structure, which is a hybrid cross-bus implementation. Its design idea is to integrate The cross bus matrix is divided into small cross matrices connected by a high performance bus. The advantage is that the number of cross-buses is reduced, the cost is reduced, and bus contention is reduced; however, the bus connecting the cross-matrix becomes a new performance bottleneck.<br/><br/>3. Linear non-blocking transmission</p>
<p>The best performance we can buy for the transfer machine is to require linear non-blocking transmission. How do we investigate whether the backplane bandwidth of a switch is sufficient? How to determine whether the design of the switch you bought is reasonable, and there is a blocking structure design?</p>
<p>Calculation formula:</p>
<p>A. The sum of the number of all port capacity X ports should be less than the backplane bandwidth, which can realize full-duplex non-blocking switching, which proves that the switch has the conditions of maximizing data exchange performance.</p>
<p>B. Full configuration throughput (Mbps) = full configuration GE port number × 1.488 Mpps, wherein the theoretical throughput of a Gigabit port with a packet length of 64 bytes is 1.488 Mpps. For example, a switch with up to 64 Gigabit ports should have a full configuration throughput of 64 x 1.488 Mpps = 95.2 Mpps to ensure non-blocking packet switching when all port line speeds are working. Example: If a switch can provide up to 176 Gigabit ports and the declared throughput is less than 261.8 Mpps (176 x 1.488 Mpps = 261.8), then the user has reason to believe that the switch is designed with a blocking structure.</p>
<p>For 10 Gigabit Ethernet, the packet forwarding rate of a wire-speed port is 14.88 Mpps.</p>
<p>For Gigabit Ethernet, the packet forwarding rate of a wire-speed port is 1.488 Mpps.</p>
<p>For Fast Ethernet, the packet forwarding rate of a wire-speed port is 0.1488 Mpps.</p>
<p>For OC-12 POS ports, the packet forwarding rate of a line rate port is 1.17 Mpps.</p>
<p>For the POS port of OC-48, the packet forwarding rate of one line-speed port is 468MppS.</p>
<p>Therefore, if we can meet the above three conditions, then we say that this switch is truly linear and non-blocking; the back-up rate of the switch is generally:</p>
<p>Mbps, which refers to the second layer, which is used for the exchange of more than three layers.</p>
<p>Mpps<br/><br/>4. The backplane bandwidth does not exist in the switch with the fixed port.</p>
<p>This concept is only possible with modular switches (with scalable slots that can flexibly change the number of ports). Fixed-port switches do not have this concept, and the backplane capacity and switching capacity of fixed-port switches are equal. The backplane bandwidth determines the maximum bandwidth for the connection between each board (including boards that are not yet installed in the expandable slot) and the switching engine. Due to the different architectures of modular switches, backplane bandwidth is not fully effective at representing the true performance of the switch. Fixed port switches do not have the concept of backplane bandwidth.<br/><br/>Second, the exchange capacity</p>
<p>It is the transmission capacity of the core CPU and bus, generally smaller than the backplane bandwidth. H3C low-end LSW switching uses the store-and-forward mode. The size of the switching capacity is determined by the bit width of the buffer (BUFFER) and its bus frequency. That is, the switching capacity = cache bit width * cache bus frequency = 96 * 133 = 12.8 Gbps H3C high-end switch exchange capacity can be equal to twice the total port capacity, total port capacity = 2 * (n * 100Mbps + m * 1000Mbps) ( n: indicates that the switch has n 100M ports, m: indicates that the switch has m 1000M ports.</p>
<p>3. The packet forwarding rate forwarding capability is measured by the minimum packet length. For the Ethernet minimum packet is 64BYTE, plus the frame overhead 20BYTE. Therefore, the minimum package is 84BYTE. For a full-duplex 1000Mbps interface to achieve line speed requirements: forwarding capacity = 1000Mbps / ((64 + 20) * 8bit) = 1.488Mpps for a full-duplex 100Mbps interface to achieve line speed requirements: forwarding capacity = 100Mbps / ((64+20)*8bit)=0.149Mpps Unit: Mpps (Million packets per second)<br/><br/>This article is from the "Snow Moon Studio" blog, please be sure to keep this source <a href="http://xueyue8.blog.51cto.com/4650249/1765750">http://xueyue8.blog.51cto.com/4650249/1765750</a> <br/><br/>How is the backplane bandwidth, switching capacity, and packet forwarding rate of the switch calculated? For the manufacturers, the standard is higher than the line speed forwarding.</p><h1>Topics</h1>
<p>個人電腦軟體與硬體基本概念</p>
<p>網路基本概念與設定</p>
<p>Windows 10 64 位元隨身程式系統</p>
<p><a href="http://mde.tw">http://mde.tw</a></p>
<p>cmsimde</p>
<p>blogger</p>
<p>Github</p>
<p>Fossil SCM</p>
<p><a href="http://fossil.kmol.info">http://fossil.kmol.info</a></p>
<p style="padding-left: 30px;"><a href="http://mde.tw/fosgit">http://mde.tw/fosgit</a></p>
<p style="padding-left: 30px;"><a href="http://fossil.kmol.info/fosgit/doc/trunk/index.html">http://fossil.kmol.info/fosgit/doc/trunk/index.html</a></p>
<p style="padding-left: 30px;"><a href="https://fossil.kmol.info/fosgit/doc/0f7bf53ab9/content/index.html">https://fossil.kmol.info/fosgit/doc/0f7bf53ab9/content/index.html</a> </p>
<p><a href="http://jpme.eng.nfu.edu.tw">http://jpme.eng.nfu.edu.tw</a></p>
<p></p><h2>Topic 1</h2>
<h4>計算機概論課程回顧</h4>
<p>首先必須先了解電腦輔助設計室中的網路設定:</p>
<p>由於上課時各電腦採用純 IPv6 協定上網, 因此可以將 IPv4 網路協定勾選移除, 且以 DHCP6 取得 2001:288:6004:17:xxxx 格式的 IPv6 網路位址, 惟需自行設定 DNS 伺服器. 可以選擇機械設計工程系的 DNS 伺服器 2001:288:6004:17::3 或中華電信 DNS 伺服器 2001:b000:168::1</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/DTevKRLDlDg" width="560"></iframe></p>
<p>接著學習如何利用可攜式 ShareX 錄製電腦操作畫面流程, 存為 mp4 格式後上傳到 @gm 帳號對應的 Youtube. 本課程建議各學員將每週根據課程進度所操作的流程錄製成 mp4 影片嵌入個人的網誌與網頁中.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/C-NXtt3ZUPc" width="560"></iframe></p>
<p>接著學習如何利用 @gm 帳號建立分組 Blogger. 完成後各分組的網誌連結如下:</p>
<p><a href="https://wcmj2021g1.blogspot.com">https://wcmj2021g1.blogspot.com</a></p>
<p><a href="https://wcmj2021g2.blogspot.com">https://wcmj2021g2.blogspot.com</a></p>
<p><a href="https://wcmj2021g3.blogspot.com">https://wcmj2021g3.blogspot.com</a></p>
<p><a href="https://wcmj2021g4.blogspot.com">https://wcmj2021g4.blogspot.com</a></p>
<p><a href="https://wcmj2021g5.blogspot.com">https://wcmj2021g5.blogspot.com</a></p>
<p><a href="https://wcmj2021g6.blogspot.com">https://wcmj2021g6.blogspot.com</a></p>
<p><a href="https://wcmj2021g7.blogspot.com">https://wcmj2021g7.blogspot.com</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Fca48ERoZqY" width="560"></iframe></p>
<p>各組組長完成分組 Blogger 網誌建立後, 可利用設定選項將各組員設為可在分組網誌發佈文章的協同管理者或協同作者.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/P1VtVwjyg-g" width="560"></iframe></p>
<p>接著學習如何透過 Youtube 影片中分享功能中的嵌入選擇取得特定影片的 iframe 嵌入 html 後, 可將各組員所製作的電腦操作影片嵌入個人網站或分組網誌中.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/9Oq7EGsFEJc" width="560"></iframe></p>
<p>每一位學員登入學校配發的 Gmail 帳號後, 至 <a href="https://www.blogger.com">https://www.blogger.com</a> 建立一個網誌, 並將上學期計算機課程的內容摘要整理為 <a href="https://www.blogger.com">Blogger</a> 網誌內容. 可以按照每一週的教學內容整理為網誌, 或者根據教學主題內容整理為網誌內容.</p>
<p>請問:</p>
<p style="padding-left: 30px;"><span style="background-color: #ffff99;">已知 <a href="https://nfulist.herokuapp.com/?semester=1092&amp;courseno=2384&amp;column=True" style="background-color: #ffff99;">修課學員名單</a> (<a href="https://github.com/mdecourse/nfulist" style="background-color: #ffff99;">nfulist 程式碼</a>) (<a href="https://github.com/mdecourse/nfulist/discussions/2" style="background-color: #ffff99;">從教務主機查詢資料</a>) 可以取得修課學員名單, 是否可以用於取得各學員的個人 <a href="https://www.blogger.com" style="background-color: #ffff99;">Blogger</a> 連結?</span></p>
<p style="padding-left: 60px;">採人工方式啟動 Ethercalc 網際表單, 從修課學員名單中複製學號行資料, 然後在 <a href="https://gitter.im/mdecourse/wcmj2021">https://gitter.im/mdecourse/wcmj2021</a> 公佈網際表單連結, 讓各學員依照學號填入個人 Blogger 網誌連結後, 再複製資料, 並設法轉為 HTML Anchor 連結.</p>
<p style="padding-left: 60px;">上述流程能不能採更方便的流程進行 (減少人工複製與處理可能產生的錯誤)?</p>
<p style="padding-left: 90px;"><a href="http://mde.tw/cad2020/content/Ethercalc.html">http://mde.tw/cad2020/content/Ethercalc.html</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/audreyt/ethercalc/blob/master/API.md">https://github.com/audreyt/ethercalc/blob/master/API.md</a></p>
<p style="padding-left: 90px;"><a href="https://pypi.org/project/ethercalc-python/">https://pypi.org/project/ethercalc-python/</a></p>
<p style="padding-left: 90px;"><a href="http://mde.tw/cd2021/content/Topics.html">http://mde.tw/cd2021/content/Topics.html</a></p>
<p style="padding-left: 90px;"><a href="https://developers.google.com/blogger">Blogger API</a> 能夠做甚麼?</p>
<p style="padding-left: 60px;">相關技術:</p>
<p style="padding-left: 90px;"><a href="https://docs.python.org/3/tutorial/">Python</a> - 會編寫基本的 Python 程式</p>
<p style="padding-left: 120px;"><a href="http://mde.tw/cp2020">http://mde.tw/cp2020</a></p>
<p style="padding-left: 90px;"><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML</a> - 了解超文件相關標註用法</p>
<p style="padding-left: 90px;"><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript">Jascript</a> - 了解 Javascript 如何與 HTML 結合應用?</p>
<p style="padding-left: 90px;"><a href="https://flask.palletsprojects.com/en/1.1.x/">Flask</a> - 了解如何使用 Flask 網際框架?</p>
<p style="padding-left: 90px;"><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">bs4</a> - 了解如何透過 Python 的 beautifulsoup 模組解讀 HTML 取用網頁上的相關資料?</p>
<p style="padding-left: 90px;"><a href="https://www.w3schools.com/xml/ajax_intro.asp">AJAX</a> - 了解 AJAX 如何運作? 如何應用?</p>
<p style="padding-left: 90px;"><a href="https://www.heroku.com/">Heroku</a> - 了解如何將網際程式部署到 Heroku 雲端系統?</p>
<p style="padding-left: 120px;"><a href="http://mde.tw/cp2020/content/Heroku.html">http://mde.tw/cp2020/content/Heroku.html</a></p>
<p style="padding-left: 120px;"><a href="http://mde.tw/cp2020/content/scissor-rock-paper.html">http://mde.tw/cp2020/content/scissor-rock-paper.html</a></p>
<p style="padding-left: 30px;">應該要如何將選課學員的個人 <a href="https://www.blogger.com">Blogger</a> 網誌連結整理 (嵌入)在這個頁面?</p>
<p style="padding-left: 30px;"><a href="https://drive.google.com/file/d/1x-e6p61Df2RiJpV4YmY3opSoBQnXEv6R/view?usp=sharing">2010_Beginning Google Blogger.pdf</a></p>
<p style="padding-left: 30px;">網際內容管理課程目標:</p>
<p style="padding-left: 60px;">精密機械設計工程師可以利用具版次與歷程管理系統, 長期記錄學習與研究結果.</p>
<p style="padding-left: 60px;">利用網際流程展示產品設計或製造流程</p>
<p style="padding-left: 90px;"><a href="http://mde.tw/virtualkossel/">http://mde.tw/virtualkossel/</a> </p>
<h4 style="padding-left: 30px;">背景知識:</h4>
<p style="padding-left: 60px;"> 英文閱讀能力重不重要?</p>
<p style="padding-left: 90px;">何謂 <a href="https://en.wikipedia.org/wiki/World_Wide_Web">World Wide Web</a>? (<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91">全球資訊網</a>, 又稱為萬維網)</p>
<p style="padding-left: 90px;">為什麼 <a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91">https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91</a> 其實就是<a href="https://zh.wikipedia.org/wiki/萬維網">https://zh.wikipedia.org/wiki/萬維網</a></p>
<p style="padding-left: 90px;">html 與 WWW 的關係為何？</p>
<p style="padding-left: 90px;">為什麼在上列中文版的萬維網說明頁面, 會被標註"此條目翻譯品質不佳"? 英文說明頁為何沒有這樣的問題?</p>
<p style="padding-left: 60px;">電腦軟硬體應用能力重不重要?</p>
<p style="padding-left: 90px;">要將各學員的 <a href="https://www.blogger.com">Blogger</a> 網誌連結放入這個頁面, 除了手動一一 key in 編輯外, 還有沒有其他較有效率的做法?</p>
<p style="padding-left: 120px;">用 <a href="https://ethercalc.net/">https://ethercalc.net/</a> 按照學號次序取得各學員的 <a href="https://www.blogger.com">Blogger</a> 網誌連結後, 存成檔案, 然後再編寫程式讀取各學員的網誌連結後, 建立所需的 html 超文件格式內容後, 直接差異本頁面特定位置後存檔.</p>
<p style="padding-left: 120px;">將本網誌設定為可公開編輯的動態網頁模式, 讓各學員自行登入將網誌連結輸入後, 以"協同編輯模式"存檔後進行檢查與整理. (此一方案所得到的結果, 與上列其他方法比較有何優點或缺點?)</p>
<p style="padding-left: 120px;">還有沒有其他更有效率的做法?</p>
<h4 style="padding-left: 30px;">議題討論:</h4>
<p style="padding-left: 60px;">假如一位精密機械工程師只能接收中文資料, 面對"翻譯品質不佳"的萬維網"說明內容, 是否應該有因應對策?</p>
<p style="padding-left: 90px;">KMOLab 鼓勵年輕人儘快翻越橫在面前的<a href="http://mde.tw/wcmj2021/content/%E4%B8%89%E9%81%93%E7%89%86%E7%90%86%E8%AB%96.html">三面牆理論</a>.</p>
<p style="padding-left: 60px;">假如想要利用程式方法解決電腦軟硬體應用過程所碰到的問題? 該具備哪些基本條件?</p>
<p style="padding-left: 90px;">你對電腦與網路的軟硬體配置及應用有多少了解?</p>
<p style="padding-left: 90px;">你是否具備基本的英文閱讀能力? 你能夠不看鍵盤進行英文與中文打字嗎? 我應該要學習哪一種或哪幾種中文輸入法? 或者此後完全使用語音轉文字的方式輸入?</p>
<p style="padding-left: 60px;">截至目前只上過計算機概論, 而且下學期才上計算機程式, 我們有能力現在就開始學習如何寫電腦程式嗎?</p>
<p style="padding-left: 90px;">電腦與網路軟硬體是現代人生活中不可或缺的工具, 只要確認數位方法能夠有效解決問題, 任何人都可以在任一時間點設法透過客製化的軟硬體方案 (自行編寫或修改既有方案) 解決所面臨的問題.</p>
<p style="padding-left: 120px;">了解 Windows 10 64 位元基本操作方式</p>
<p style="padding-left: 120px;">自行在 Windows 10 64 位元中建立可攜程式環境 (Why?)</p>
<p style="padding-left: 120px;">自行在 Windows 10 64 位元環境中建立 Ubuntu 虛擬 Virtualbox 主機, 或者透過 <a href="https://docs.microsoft.com/zh-tw/windows/wsl/install-win10">WSL</a> 了解 Linux 系統應用方法.</p>
<p style="padding-left: 60px;"></p><h2>W2-W3</h2>
<p>說明與機械設計工程系綜一館八樓電腦輔助設計室電腦網路設定有關的步驟</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/OsUNoFYaRU4" width="560"></iframe></p>
<p>demo 如何利用 git 將遠端 <a href="https://github.com/mdecourse/wcmj2021">https://github.com/mdecourse/wcmj2021</a> 倉儲 git clone --recurse-submodules URL 到近端後, 利用 Python 啟動 cmsimde 網際內容管理系統的動態網站, 加入第三階的 W2 頁面後, 將上一個影片嵌入後, 以 git add, commit 及 push 把改版的內容新增提交推送至 Github 倉儲, 得到改版後的 <a href="http://mde.tw/wcmj2021/content/W2.html">http://mde.tw/wcmj2021/content/W2.html</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Z_PESGUDKZY" width="560"></iframe></p>
<p><br/>說明如何從 <a href="http://a.kmol.info:88">http://a.kmol.info:88</a> 下載可攜程式系統 kmol2021_spring_v3.7z, 利用 <a href="https://www.7-zip.org">https://www.7-zip.org</a> 解開壓縮後, 即可用 start_ipv6.bat 啟動系統, 並示範如何執行 Python 程式.</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/8LGEoyAs8xQ" width="560"></iframe></p>
<p><br/>說明如何利用 <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a> 建立自己的 帳號.github.io 網站</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/d_6dK-cHKUg" width="560"></iframe></p><h2>W4</h2>
<p>截至目前為止, 我們已經介紹如何利用學校所配發的 @gm 電子郵件帳號建立在 <a href="https://www.blogger.com">https://www.blogger.com</a> 的<span style="background-color: #ffff99;">個人網誌</span>以及<span style="background-color: #ffff99;">分組網誌</span>, 也說明如何在 <a href="https://github.com/">https://github.com/</a> 利用 帳號.github.io 倉儲建立<span style="background-color: #ffff99;">個人網站</span>, 接下來將以每組六人為一個單位進行網際內容的閱讀以及整理, 以下為第九週期中考之前, 希望各組完成閱讀, 討論並整理的相關內容:</p>
<ol>
<li>與計算機概論與電腦網路有關的內容整理 - <a href="/downloads/Introduction_ to_computers_10_pages.pdf">Intro to computer1</a>, <a href="/downloads/intro to computers.pdf">2</a>, <a href="/downloads/ComputerNetworks_936_pages.pdf">computer networks</a>, (<a href="http://ocw.aca.ntu.edu.tw/ntu-ocw/ocw/cou/101S210">ntu ee course</a>)</li>
<li>與 Google 發展有關的內容整 - 有關 Google 的發展歷史: <a href="https://en.wikipedia.org/wiki/Google">https://en.wikipedia.org/wiki/Google</a>, 請各組組員仔細閱讀這份資料後, 將認為重點的資料放入各學員的 blogger 網誌以及個人網站中.</li>
<li>與 Blockchain 發展有關的內容整理 - <a href="https://link.springer.com/book/10.1007/978-3-030-40142-9">Build Your Own Blockchain</a></li>
</ol><h1>Google</h1>
<p>有關 Google 的發展歷史: <a href="https://en.wikipedia.org/wiki/Google">https://en.wikipedia.org/wiki/Google</a> 請各組仔細閱讀這份資料後, 將認為重點的資料放入各學員的 blogger 網誌以及個人網站中.</p><h2>Flask</h2>
<p><a href="https://flask.palletsprojects.com/en/1.1.x/">https://flask.palletsprojects.com/en/1.1.x/</a> </p>
<h2>Oauth2</h2>
<p><a href="https://github.com/zquestz/omniauth-google-oauth2">https://github.com/zquestz/omniauth-google-oauth2</a></p>
<p><a href="https://github.com/thephpleague/oauth2-google">https://github.com/thephpleague/oauth2-google</a></p><h2>Calendar API</h2>
<p><a href="https://github.com/kuzmoyev/google-calendar-simple-api">https://github.com/kuzmoyev/google-calendar-simple-api</a></p>
<h2>Drive API</h2>
<p><a href="https://github.com/iterative/PyDrive2">https://github.com/iterative/PyDrive2</a> </p><h1>Web Site</h1>
<p>利用 Github 與 Gitlab 倉儲建立個人網頁</p>
<p>何謂網際內容管理?</p>
<p style="padding-left: 30px;">Web-based Content Management</p>
<p style="padding-left: 30px;">Content?</p>
<p style="padding-left: 60px;">3D 零組件</p>
<p style="padding-left: 90px;"><a href="https://www.onshape.com">https://www.onshape.com</a></p>
<p style="padding-left: 60px;">英文學習紀錄</p>
<p style="padding-left: 60px;">數學學習紀錄</p>
<p style="padding-left: 60px;">專業課程學習紀錄</p>
<p style="padding-left: 90px;">Video</p>
<p style="padding-left: 120px;"><a href="https://github.com/ShareX/ShareX">https://github.com/ShareX/ShareX</a></p>
<p style="padding-left: 120px;"><a href="https://www.blender.org/">https://www.blender.org/</a></p>
<p style="padding-left: 90px;">Audio</p>
<p style="padding-left: 120px;"><a href="https://www.audacityteam.org/">https://www.audacityteam.org/</a></p>
<p style="padding-left: 90px;">Images</p>
<p style="padding-left: 120px;"><a href="https://www.gimp.org/">https://www.gimp.org/</a></p>
<p style="padding-left: 120px;"><a href="https://inkscape.org/">https://inkscape.org/</a></p>
<p style="padding-left: 90px;">Animation</p>
<p>Github 是甚麼?</p>
<p style="padding-left: 30px;">Gitlab 又是甚麼?</p>
<p style="padding-left: 60px;">自行在 Ubuntu 操作系統上安裝 Gitlab?</p>
<p style="padding-left: 90px;">Ubuntu 操作系統?</p>
<p style="padding-left: 120px;">實體系統</p>
<p style="padding-left: 120px;">虛擬系統</p>
<p style="padding-left: 150px;"><a href="https://www.virtualbox.org/">Virtualbox</a></p>